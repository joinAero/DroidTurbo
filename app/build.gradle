buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        // android-apt: https://bitbucket.org/hvisser/android-apt
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        // Gradle Retrolambda: https://github.com/evant/gradle-retrolambda
        classpath 'me.tatarka:gradle-retrolambda:3.5.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

def getGitBranch() {
    def gitBranch = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'symbolic-ref', '--short', '-q', 'HEAD'
        standardOutput = gitBranch
        // ignore error output as we might not be on a branch
        ignoreExitValue = true
    }
    return gitBranch.toString().trim();
}

def getGitHash() {
    def gitHash = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = gitHash
        // ignore error output as we might not be on a branch
        ignoreExitValue = true
    }
    return gitHash.toString().trim();
}

android {
    compileSdkVersion versionCompileSdk
    buildToolsVersion versionBuildTools

    // Apache HTTP Client Removal - Android 6.0 Changes:
    // http://developer.android.com/about/versions/marshmallow/android-6.0-changes.html#behavior-apache-http-client
    //useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "cc.eevee.turbo"
        minSdkVersion versionMinSdk
        targetSdkVersion versionTargetSdk
        versionCode 1
        versionName "1.0.0_" + gitHash
        // Apps Over 65K Methods: http://developer.android.com/tools/building/multidex.html
        //multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        // Gradle Retrolambda Plugin
        sourceCompatibility javaSourceCompatibility
        targetCompatibility javaTargetCompatibility
    }
    packagingOptions {
        exclude 'LICENSE'
        exclude 'LICENSE.txt'
    }

    // Configure APK Splits: https://developer.android.com/studio/build/configure-apk-splits.html
    /*splits {
        // Configures screen ABI split settings.
        abi {
            // Enables ABI APK splits.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86, armeabi-v7a, and mips.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk true
        }
    }*/

    //project.ext.versionCodes = ['armeabi': 1, 'armeabi-v7a': 2, 'arm64-v8a': 3, 'mips': 5, 'mips64': 6, 'x86': 8, 'x86_64': 9]

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def apkName = 'DroidTurbo'
            if (variant.productFlavors.size() > 0) {
                apkName += '-' + variant.productFlavors[0].name
            }
            def branch = gitBranch
            if (branch != 'master') {
                apkName += '-' + branch
            }
            def version = variant.versionName
            def build = variant.buildType.name
            if (build == 'release') {
                def date = new Date().format('MMddHHmm')
                //def date = new Date().format('yyyyMMdd_HHmmssSSS')
                build += '_' + date
            }
            apkName += '-v' + version + '-' + build + '.apk'
            output.outputFile = new File(output.outputFile.parent, apkName)

            // assign different version code for each output
            /*
            def abi = project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0)
            output.versionCodeOverride = abi * 1000000 + android.defaultConfig.versionCode
            */
        }
    }
}

retrolambda {
    javaVersion JavaVersion.VERSION_1_7
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:appcompat-v7:${versionSupportLib}"
    compile "com.android.support:design:${versionSupportLib}"
    compile "com.android.support:cardview-v7:${versionSupportLib}"
    //compile 'com.android.support:multidex:1.0.1'

    // simplify

    // Butter Knife: https://github.com/JakeWharton/butterknife
    compile 'com.jakewharton:butterknife:8.5.0'
    apt 'com.jakewharton:butterknife-compiler:8.5.0'

    // behavior

    // RxAndroid: https://github.com/ReactiveX/RxAndroid
    // RxJava2-Android-Samples: https://github.com/amitshekhariitbhu/RxJava2-Android-Samples
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.0.4'
    // RxJavaProGuardRules: https://github.com/artem-zinnatullin/RxJavaProGuardRules
    //compile 'com.artemzin.rxjava:proguard-rules:1.2.5.1'

    // view & widget

    // android-gif-drawable: https://github.com/koral--/android-gif-drawable
    compile 'pl.droidsonroids.gif:android-gif-drawable:1.2.4'

    // using in demos

    // MaterialDrawer: https://github.com/mikepenz/MaterialDrawer
    //compile('com.mikepenz:materialdrawer:5.8.1@aar') { transitive = true }

    // dependent libraries

    //compile project(':libgldraw')
    debugCompile project(path: ':libgldraw', configuration: 'debug')
    releaseCompile project(path: ':libgldraw', configuration: 'release')

    //compile project(':libopencv')
    debugCompile project(path: ':libopencv', configuration: 'debug')
    releaseCompile project(path: ':libopencv', configuration: 'release')

    // test

    // JUnit4: https://github.com/junit-team/junit4
    testCompile 'junit:junit:4.12'
    // AssertJ: https://github.com/joel-costigliola/assertj-core
    testCompile 'org.assertj:assertj-core:3.6.2'
    // Mockito: https://github.com/mockito/mockito
    testCompile 'org.mockito:mockito-core:2.6.8'

    // android test
    // Testing Support Library: https://developer.android.com/topic/libraries/testing-support-library/index.html
    // android-unit-testing-tutorial: https://github.com/ChrisZou/android-unit-testing-tutorial

    androidTestCompile "com.android.support:support-annotations:${versionSupportLib}"
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'

    // AssertJ Android: https://github.com/square/assertj-android
    def versionAssertJAndroid = '1.1.1'
    androidTestCompile "com.squareup.assertj:assertj-android:${versionAssertJAndroid}"
    androidTestCompile "com.squareup.assertj:assertj-android-support-v4:${versionAssertJAndroid}@aar"
    //androidTestCompile "com.squareup.assertj:assertj-android-play-services:${versionAssertJAndroid}@aar"
    androidTestCompile "com.squareup.assertj:assertj-android-appcompat-v7:${versionAssertJAndroid}@aar"
    androidTestCompile "com.squareup.assertj:assertj-android-design:${versionAssertJAndroid}@aar"
    //androidTestCompile "com.squareup.assertj:assertj-android-mediarouter-v7:${versionAssertJAndroid}@aar"
    //androidTestCompile "com.squareup.assertj:assertj-android-gridlayout-v7:${versionAssertJAndroid}@aar"
    androidTestCompile "com.squareup.assertj:assertj-android-cardview-v7:${versionAssertJAndroid}@aar"
    androidTestCompile "com.squareup.assertj:assertj-android-recyclerview-v7:${versionAssertJAndroid}@aar"
    //androidTestCompile "com.squareup.assertj:assertj-android-palette-v7:${versionAssertJAndroid}@aar
}

// Reference:
// * Android Plugin for Gradle: http://developer.android.com/tools/building/plugin-for-gradle.html
// * Gradle Plugin User Guide: http://tools.android.com/tech-docs/new-build-system/user-guide
