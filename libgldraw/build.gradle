apply plugin: 'com.android.library'

android {
    compileSdkVersion versionCompileSdk
    buildToolsVersion versionBuildTools

    defaultConfig {
        minSdkVersion versionMinSdk
        targetSdkVersion versionTargetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // C++ Library Support: https://developer.android.com/ndk/guides/cpp-support.html
        // C++ Build Support: https://sites.google.com/a/android.com/tools/tech-docs/external-c-builds
        externalNativeBuild {
            cmake {
                // Android NDK Native APIs: https://developer.android.com/ndk/guides/stable_apis.html
                cppFlags '-std=c++11 -frtti -fexceptions'
                // Available argumetns are inside ${SDK}/cmake/.../android.toolchain.cmake file
                arguments '-DANDROID_PLATFORM=android-9',
                        '-DANDROID_TOOLCHAIN=clang',
                        '-DANDROID_STL=gnustl_static'
            }
        }
        ndk {
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }

    publishNonDefault true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
}
